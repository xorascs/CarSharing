@model CarSharing.Models.CarViewModel

@{
    ViewData["Title"] = "Details of Car";
}

<style>
    .img-thumbnail {
        cursor: pointer;
        max-width: 100%;
        height: auto;
    }

    input[type="range"] {
        -webkit-appearance: none;
        width: 100%;
        height: 5px;
        background: #ddd;
        border-radius: 5px;
        outline: none;
        opacity: 0.7;
        transition: opacity 0.2s;
    }

    /* Custom styling for range thumb */
    input[type="range"]::-webkit-slider-thumb {
        -webkit-appearance: none;
        appearance: none;
        width: 25px;
        height: 25px;
        background: #007bff;
        border-radius: 50%;
        cursor: pointer;
    }

    /* Adjust opacity on range input hover */
    input[type="range"]:hover {
        opacity: 1;
    }
</style>

<p class="animate__animated animate__fadeIn"><a asp-action="Index" class="text-decoration-none text-secondary">Cars</a> / <a asp-action="Details" class="text-decoration-none text-secondary">@Model.Car!.Brand!.Name @Model.Car!.Model</a></p>

<div class="row animate__animated animate__slideInUp">
    <div class="col-sm-8">
        <!-- Carousel -->
        <div id="demo" class="carousel slide w-100 animate__animated animate__zoomIn animation-delay-05s" data-bs-ride="carousel">

            <!-- Indicators/dots -->
            <div class="carousel-indicators">
                <button type="button" data-bs-target="#demo" data-bs-slide-to="0" class="active"></button>
                @for (int i = 1; i < Model.Car!.ImagePaths.Count; i++)
                {
                    <button type="button" data-bs-target="#demo" data-bs-slide-to="@i"></button>
                }
            </div>

            <!-- The slideshow/carousel -->
            <div class="carousel-inner">
                @if (Model.Car!.ImagePaths != null && Model.Car!.ImagePaths.Any())
                {
                    bool isFirstItem = true;
                    foreach (var imagePath in Model.Car!.ImagePaths)
                    {
                        if (isFirstItem)
                        {
                            <div class="carousel-item active">
                                <img src="~/uploads/@imagePath" alt="Existing Image" class="d-block w-100 img-thumbnail" style="height: 500px; width: 100%; object-fit: cover;" data-bs-toggle="modal" data-bs-target="#imageModal" />
                            </div>
                        }
                        else
                        {
                            <div class="carousel-item">
                                <img src="~/uploads/@imagePath" alt="Existing Image" class="d-block w-100 img-thumbnail" style="height: 500px; width: 100%; object-fit: cover;" data-bs-toggle="modal" data-bs-target="#imageModal" />
                            </div>
                        }
                        isFirstItem = false;
                    }
                }
            </div>

            <!-- Left and right controls/icons -->
            <button class="carousel-control-prev" type="button" data-bs-target="#demo" data-bs-slide="prev">
                <span class="carousel-control-prev-icon"></span>
            </button>
            <button class="carousel-control-next" type="button" data-bs-target="#demo" data-bs-slide="next">
                <span class="carousel-control-next-icon"></span>
            </button>
        </div>
        <table class="table table-striped my-4">
            <tbody>
                <tr>
                    <th class="col-sm-4">@Html.DisplayNameFor(model => model.Car!.Brand)</th>
                    <td class="col-sm-8">@Html.DisplayFor(model => model.Car!.Brand!.Name)</td>
                </tr>
                <tr>
                    <th class="col-sm-4">@Html.DisplayNameFor(model => model.Car!.FuelType)</th>
                    <td class="col-sm-8">@Html.DisplayFor(model => model.Car!.FuelType)</td>
                </tr>
                <tr>
                    <th class="col-sm-4">@Html.DisplayNameFor(model => model.Car!.Model)</th>
                    <td class="col-sm-8">@Html.DisplayFor(model => model.Car!.Model)</td>
                </tr>
                <tr>
                    <th class="col-sm-4">@Html.DisplayNameFor(model => model.Car!.Color)</th>
                    <td class="col-sm-8">@Html.DisplayFor(model => model.Car!.Color)</td>
                </tr>
                <tr>
                    <th class="col-sm-4">@Html.DisplayNameFor(model => model.Car!.ManufacturingDate)</th>
                    <td class="col-sm-8">@Html.DisplayFor(model => model.Car!.ManufacturingDate)</td>
                </tr>
            </tbody>
        </table>
        <h6>Note: minimal rental time is 4 hours!</h6>
        <!-- Comment Section -->
        <div class="my-4">
            <h3>Comments</h3>
            <hr />
            <!-- Add Comment Form -->
            <div class="card my-4">
                <div class="card-body">
                    <h5 class="card-title">Add a Comment</h5>
                    <form asp-controller="Cars" asp-action="AddComment" method="post">
                        <input type="hidden" name="id" value="@Model.Car!.Id" />
                        <div class="form-group">
                            <label for="commentText">Your Comment</label>
                            <textarea class="form-control" id="commentText" name="commentText" rows="3" required></textarea>
                            <div class="invalid-feedback">
                                Please enter your comment.
                            </div>
                        </div>
                        <div class="form-group mt-3 my-3">
                            <label for="rating" id="ratingValue" class="d-block text-center my-2">Rating: 3</label>
                            <input type="range" class="form-control-range w-100" id="rating" name="rating" min="1" max="5" required>
                            <div class="invalid-feedback">
                                Please select a rating.
                            </div>
                        </div>
                        <button type="submit" class="btn btn-primary">
                            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-send" viewBox="0 0 16 16">
                                <path d="M15.854.146a.5.5 0 0 1 .11.54l-5.819 14.547a.75.75 0 0 1-1.329.124l-3.178-4.995L.643 7.184a.75.75 0 0 1 .124-1.33L15.314.037a.5.5 0 0 1 .54.11ZM6.636 10.07l2.761 4.338L14.13 2.576zm6.787-8.201L1.591 6.602l4.339 2.76z" />
                            </svg>
                        </button>
                    </form>
                </div>
            </div>
            @if (Model.RatingAndReview != null)
            {
                foreach (var review in Model.RatingAndReview)
                {
                    <div class="card my-2">
                        <div class="card-body">
                            <h5 class="card-title">
                                <a asp-action="Account" asp-controller="Users" asp-route-id="@review.User!.Id" class="text-decoration-none text-dark">@review.User!.Name @review.User!.Surname</a>
                                <span class="badge float-end @(review.Rating == 1 ? "bg-danger" : review.Rating >= 2 && review.Rating < 4 ? "bg-warning" : review.Rating >= 4 ? "bg-success" : "")">@review.Rating</span>
                            </h5>
                            <p class="card-text">@review.Comment</p>
                            <small class="text-muted">@Html.DisplayFor(modelItem => review.CreatedAt)</small>
                            @if (ViewBag.isAdmin == 1 || ViewBag.Name == review.User!.Name)
                            {
                                <div class="float-end">
                                    <a asp-controller="RatingAndReviews" asp-action="Edit" asp-route-id="@review.Id" class="btn btn-secondary">
                                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-pencil-square" viewBox="0 0 16 16">
                                            <path d="M15.502 1.94a.5.5 0 0 1 0 .706L14.459 3.69l-2-2L13.502.646a.5.5 0 0 1 .707 0l1.293 1.293zm-1.75 2.456-2-2L4.939 9.21a.5.5 0 0 0-.121.196l-.805 2.414a.25.25 0 0 0 .316.316l2.414-.805a.5.5 0 0 0 .196-.12l6.813-6.814z" />
                                            <path fill-rule="evenodd" d="M1 13.5A1.5 1.5 0 0 0 2.5 15h11a1.5 1.5 0 0 0 1.5-1.5v-6a.5.5 0 0 0-1 0v6a.5.5 0 0 1-.5.5h-11a.5.5 0 0 1-.5-.5v-11a.5.5 0 0 1 .5-.5H9a.5.5 0 0 0 0-1H2.5A1.5 1.5 0 0 0 1 2.5z" />
                                        </svg>
                                    </a>
                                    <a asp-controller="RatingAndReviews" asp-action="Delete" asp-route-id="@review.Id" class="btn btn-danger">
                                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-trash" viewBox="0 0 16 16">
                                            <path d="M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5m2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5m3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0z" />
                                            <path d="M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1zM4.118 4 4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4zM2.5 3h11V2h-11z" />
                                        </svg>
                                    </a>
                                </div>
                            }
                        </div>
                    </div>
                }
            }
        </div>
    </div>
    <div class="col-sm-4">
        <h1 class="display-4 d-inline-block my-3">
            @Model.Car!.Brand!.Name @Model.Car!.Model
            @if (Model.Car!.FuelType == FuelTypes.Electric)
            {
                <span class="badge bg-success rounded-circle fs-4 align-middle">E</span>
            }
        </h1>

        @switch (Model.Car!.Status)
        {
            case Status.Renting:
                <br />

                <span class="badge bg-primary fs-3 align-middle my-3">Renting</span>
                break;
            case Status.Free:
                <br />

                <span class="badge bg-success fs-3 align-middle my-3">Ready to Rent</span>
                break;
        }
        <h4 class="text-secondary">@Model.Car!.FuelType, @Model.Car!.Color</h4>
        <h4 class="text-secondary">Manufacturing Date: @Html.DisplayFor(model => model.Car!.ManufacturingDate)</h4>
        <h4 class="badge bg-light text-dark fs-3 w-100 my-4">@Model.Car!.Price $/h</h4>
        <div>
            <!-- Existing code omitted for brevity -->
            <div>
                @if (ViewBag.isAdmin == 1 && ViewBag.Name != null)
                {
                    <a asp-action="Edit" asp-route-id="@Model.Car!.Id" class="btn btn-primary w-100 my-2 animate__animated animate__bounceInRight animation-delay-05s">Edit</a>
                }
                <button id="showPaymentForm" class="btn btn-success w-100 my-2 animate__animated animate__bounceInRight animation-delay-075s" @(Model.Car!.Status == Status.Renting ? "disabled" : "")>Rent a Car</button>
                <div id="paymentForm" style="display: none;" class="animate__animated animate__bounceIn">
                    <div class="card shadow-sm">
                        <div class="card-body">
                            <form asp-controller="Cars" asp-action="Rent" method="post">
                                <input type="hidden" name="id" value="@Model.Car!.Id" />

                                <!-- Payment Information Fields -->
                                <div class="form-group">
                                    <label for="cardNumber">Card Number:</label>
                                    <input type="text" class="form-control" id="cardNumber" name="cardNumber" minlength="16" maxlength="16" required pattern="[0-9]+" placeholder="1234123412341234" title="Please enter only numeric characters">
                                    <div class="invalid-feedback">
                                        Please enter a valid card number.
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label for="cardHolderName">Card Holder Name:</label>
                                    <input type="text" class="form-control" id="cardHolderName" name="cardHolderName" pattern="[a-zA-Z\s]*" placeholder="John Doe" title="Please enter only alphabetic characters and space">
                                    <div class="invalid-feedback">
                                        Please enter a valid card holder name.
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label for="expirationDate">Expiration Date:</label>
                                    <input type="month" class="form-control" id="expirationDate" name="expirationDate" placeholder="MM/YYYY" required>
                                </div>
                                <div class="form-group">
                                    <label for="cvv">CVV:</label>
                                    <input type="number" class="form-control" id="cvv" name="cvv" min="100" max="999" placeholder="333" required>
                                </div>

                                <div class="form-group">
                                    <label for="rentalHours">Select Rental Duration (hours):</label>
                                    <input type="range" class="form-range" min="4" max="24" step="1" id="rentalHours" name="rentalHours" value="14">
                                    <p for="rentalHours" id="rentalOutput" class="text-center m-0">14 hours</p>
                                </div>

                                <button type="submit" class="btn btn-success w-100 my-2" @(Model.Car!.Status == Status.Renting ? "disabled" : "")>
                                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-bag-plus-fill" viewBox="0 0 16 16">
                                        <path fill-rule="evenodd" d="M10.5 3.5a2.5 2.5 0 0 0-5 0V4h5zm1 0V4H15v10a2 2 0 0 1-2 2H3a2 2 0 0 1-2-2V4h3.5v-.5a3.5 3.5 0 1 1 7 0M8.5 8a.5.5 0 0 0-1 0v1.5H6a.5.5 0 0 0 0 1h1.5V12a.5.5 0 0 0 1 0v-1.5H10a.5.5 0 0 0 0-1H8.5z" />
                                    </svg>
                                </button>
                            </form>
                        </div>
                    </div>
                </div>
                <a asp-action="Index" class="btn btn-secondary w-100 my-2 animate__animated animate__bounceInRight animation-delay-1s">Back to List</a>
            </div>
        </div>
    </div>
</div>

<!-- Modal -->
<div class="modal fade" id="imageModal" tabindex="-1" aria-labelledby="imageModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-xl">
        <div class="modal-content">
            <div class="modal-body">
                <img src="" id="modalImage" class="img-fluid mx-auto d-block" style="width: 1500px;" alt="Modal Image" />
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Set modal image source when an image thumbnail is clicked
        var imageThumbnails = document.querySelectorAll('.img-thumbnail');
        var modalImage = document.getElementById('modalImage');

        imageThumbnails.forEach(function (thumbnail) {
            thumbnail.addEventListener('click', function () {
                modalImage.src = thumbnail.src;
            });
        });

        // Get the input range and output elements
        var rentalHoursInput = document.getElementById('rentalHours');
        var rentalOutput = document.getElementById('rentalOutput');

        // Add event listener to update output text when input value changes
        rentalHoursInput.addEventListener('input', function () {
            rentalOutput.textContent = rentalHoursInput.value + ' hours';
        });

        document.getElementById('showPaymentForm').addEventListener('click', function () {
            if (document.getElementById('paymentForm').style.display == 'block') {
                document.getElementById('paymentForm').style.display = 'none';
            }
            else {
                document.getElementById('paymentForm').style.display = 'block';
            }
        });

        document.getElementById('rating').addEventListener('input', () => {
            document.getElementById('ratingValue').textContent = "Rating: " + document.getElementById('rating').value;
        });
    </script>
}